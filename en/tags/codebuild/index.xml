<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CodeBuild on GrandtechCloud Service Blog</title>
    <link>https://gcssys.github.io/en/tags/codebuild/</link>
    <description>Recent content in CodeBuild on GrandtechCloud Service Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gcssys.github.io/en/tags/codebuild/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS CodeBuild - Create Your Windows DockerImage</title>
      <link>https://gcssys.github.io/en/blog/aws-codebuild-%E5%BB%BA%E7%AB%8Bwindows%E4%B8%BB%E6%A9%9F%E7%9A%84dockerimage/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gcssys.github.io/en/blog/aws-codebuild-%E5%BB%BA%E7%AB%8Bwindows%E4%B8%BB%E6%A9%9F%E7%9A%84dockerimage/</guid>
      <description>If you want to build .Net with AWS CodeBuild Windows Server, or some C# Framework, sometimes you will encounter problems with native compilation that cannot be compiled properly. You should create your own Docker Image.
Instructions Environment: Use a host or virtual machine or a direct EC2 (Windows Sever 2016 with Containers). At least 60GB of space is recommended for t2. Medium or higher. The build image will be better. The following is directly through EC2.</description>
    </item>
    
    <item>
      <title>DotNet CI/CD Troubleshooting</title>
      <link>https://gcssys.github.io/en/blog/dotnet-ci-cd-%E5%B0%88%E6%A1%88%E7%84%A1%E6%B3%95%E7%B7%A8%E8%AD%AF%E8%99%95%E7%90%86/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://gcssys.github.io/en/blog/dotnet-ci-cd-%E5%B0%88%E6%A1%88%E7%84%A1%E6%B3%95%E7%B7%A8%E8%AD%AF%E8%99%95%E7%90%86/</guid>
      <description>There are customer projects that want to import CI/CD. The project source code SourceCode is made with DotNet Web. Because the customer has not yet used the version control, here he introduced him to use Github, and by the way taught the use of Git.
The first thing I want to use here is TravisCI, because it is directly connected to Github, and it is also convenient for customers. However, testing the test code obtained from the customer side, a test encounters tragedy&amp;hellip; Because Travis is using the Linux Container to build the project, but the support for C# is limited, especially the use of many Windows frameworks, only to find TravisCI.</description>
    </item>
    
  </channel>
</rss>